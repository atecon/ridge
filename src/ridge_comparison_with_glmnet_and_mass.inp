clear
set verbose off
include ridge.gfn --force

open "/home/at/git/ridge/data/glmnet_QSE.csv"			# Set path to csv
setobs 1 1 --special-time-series

rename X1 Y
list L = const dataset
L -= Y

mod_lambda0 = ridge(0, Y, L)
mod_lambda03 = ridge(0.3, Y, L)
mod_lambda05 = ridge(0.5, Y, L)
mod_lambda100 = ridge(100, Y, L)

matrix ridge_coeff = mod_lambda0.coeffs ~ mod_lambda03.coeffs ~ mod_lambda05.coeffs ~ mod_lambda100.coeffs
ridge_coeff


foreign language=R
	#install.packages("glmnet")			# must be installed
	library(glmnet)
	data(QuickStartExample)

	# glmnet uses a different lambda-definition compared to standard textbooks.
	# This requires some standardization, see here:
	# https://stats.stackexchange.com/a/260648
	n    <- 100
	sd_y <- sqrt(var(y)*(n-1)/n)[1,1]

	mod_lambda0 = glmnet(x, y, alpha = 0, lambda = 0)
	mod_lambda03 = glmnet(x, y, alpha = 0, lambda = 0.3 * (sd_y/n) )
	mod_lambda05 = glmnet(x, y, alpha = 0, lambda = 0.5 * (sd_y/n) )
	mod_lambda100 = glmnet(x, y, alpha = 0, lambda = 100 * (sd_y/n) )

	bhat_lambda0 <- coef(mod_lambda0)
	bhat_lambda03 <- coef(mod_lambda03)
	bhat_lambda05 <- coef(mod_lambda05)
	bhat_lambda100 <- coef(mod_lambda100)

	bhat_glmnet <- as.matrix(cbind(bhat_lambda0, bhat_lambda03, bhat_lambda05, bhat_lambda100))
	gretl.export(bhat_glmnet)
end foreign
glmnet_coeff = mread("bhat_glmnet.mat", 1)
#glmnet_coeff


foreign language=R
	#install.packages("MASS")			# must be installed
	library(MASS)

	mod_lambda0 <- lm.ridge(y ~ x, lambda = 0)
	mod_lambda03 <- lm.ridge(y ~ x, lambda = 0.3)
	mod_lambda05 <- lm.ridge(y ~ x, lambda = 0.5)
	mod_lambda100 <- lm.ridge(y ~ x, lambda = 100)

	bhat_mass <- as.matrix(cbind(mod_lambda0$coef,
		                mod_lambda03$coef,
		                mod_lambda05$coef,
		                mod_lambda100$coef))

	gretl.export(bhat_mass)
end foreign
mass_coeff = mread("bhat_mass.mat", 1)
#mass_coeff


diffmat_glmnet = ridge_coeff ./ glmnet_coeff
cnameset(diffmat_glmnet, "l=0 l=0.3 l=0.5 l=100")
print diffmat_glmnet


diffmat_mass = ridge_coeff[2:,] ./ mass_coeff			# only slope coefficents
cnameset(diffmat_mass, "l=0 l=0.3 l=0.5 l=100")
print diffmat_mass

